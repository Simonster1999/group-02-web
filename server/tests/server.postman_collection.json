{
	"info": {
		"_postman_id": "7710428d-62c4-438e-b44b-a7ca98112661",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "288dc4b8-95cd-4535-8f49-cc7648b4eabe",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e222909-cdd9-4c75-8d58-8d313c8cada6",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6768bbee-f91b-4f08-a65a-c85f49fbddd1",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents[0].username).to.eql('parent_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return parent with given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e35e86bf-11f7-4373-899f-9dc1dfa5c718",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct parent\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire parent with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9bd2d493-b2ad-4ceb-b023-70c33fb2a00c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc2');\r",
							"    pm.expect(jsonData.password).to.eql(\"143\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"143\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update password for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea096432-25fa-4137-910e-3b45a5d0ec82",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent password is updated\", function () {\r",
							"    pm.expect(jsonData.password).to.eql(\"333\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\": \"333\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06efc7c8-9a3c-41df-a312-f13d739c3e97",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd1065d2-16cd-4d85-a9a7-8b4e742e2d0b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Child is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fe3b24e-d52b-4133-8d0a-f82a1686bec6",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1655895-d07a-4ea5-84dc-5e7ec5c97339",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77ac3ae2-b425-4bcc-b14e-05a1b9335cd5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct child\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3d9e229-d6fa-4ca5-9e19-b5ad34e628f5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc2');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"balance\": 100}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partially update child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1eca25ec-4d52-45c1-ae19-629bd5e5f852",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child balance is updated\", function () {\r",
							"    pm.expect(jsonData.balance).to.eql(9999);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"balance\" : 9999}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14e7e14f-7190-4bb2-8d08-0d9418dacdd3",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non extisting child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9f61bae-a7f3-4222-801b-2ac9beb3ba04",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Child not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11cf8221-2915-44f7-9d6e-965d8cca946f",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "278fd1ee-f3e6-4d50-8a4c-0e78613f73e7",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Parent not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4ebcdfb-4f34-4a02-8531-3313dd820abd",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0b97f9a-27bc-4334-a1ea-c799e4653ba2",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return quest with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92ac0b9d-c87e-47d3-9568-8ea4cda26c6b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"    //check for date\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "370e6bff-9064-432c-b57b-ec24938e4405",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7198d12-d2ae-4d50-b530-438358420d1c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    pm.expect(jsonData[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return a given quest for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b06c645c-92de-42cf-b997-718cc4279a4f",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce275f6c-2d26-4a8e-9835-7303f89a6e50",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29e9b591-8aa1-491d-b9dc-a8b67e88991b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change entire quest entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aebe7df0-4ec3-495f-92af-6c283a2cac28",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest has been replaced\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('The new, refined test quest');\r",
							"    pm.expect(jsonData.quest_desc).to.eql('A much more lucrative quest than its predecessor');\r",
							"    pm.expect(jsonData.is_completed).to.eql(false);\r",
							"    pm.expect(jsonData.money_bounty).to.eql(13.37);\r",
							"    //Research date datatype\r",
							"    //pm.expect(jsonData.date).to.eql(\"2020-09-16\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"The new, refined test quest\", \r\n    \"money_bounty\": \"13.37\",\r\n    \"is_completed\": \"false\", \r\n    \"quest_desc\": \"A much more lucrative quest than its predecessor\", \r\n    \"date\": \"2020-09-16\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f80780d1-615d-4d4b-a966-f75311648915",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id2\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change specified quest attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "788d99b3-0ec4-4ee0-a904-9e1e117a64ef",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Attributes have been updated\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest 2\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n    \"quest_name\": \"test quest 2\",\r\n    \"money_bounty\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests sorted by money_bounty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7c236ba-4b82-42d9-a75b-7a49e6ad5eee",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var lastElement = jsonData.quests.length - 1;\r",
							"    pm.expect(jsonData.quests[0].money_bounty).to.lessThan(jsonData.quests[jsonData.quests.length - 1].money_bounty);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests?sort_bounty=asc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					],
					"query": [
						{
							"key": "sort_bounty",
							"value": "asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID for the given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8022aa7e-8a1a-4f42-ae15-12899b3180d0",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Rewards (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7859a749-e555-4811-b20c-1e63aadf2d3d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    pm.expect(jsonData.rewards).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent For Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6104bf3d-d5d8-4b8e-a4bd-eb4277ed02db",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc1');\r",
							"    pm.expect(jsonData.password).to.eql(\"1234\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"parent_acc1\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94513e69-a8e4-475b-987b-20e2bbde1c06",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8cf4120-d847-47f8-a187-743785b75ac0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct reward\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create 2nd Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9f33ce1f-ce1d-4539-93ce-d2fb736fde32",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(25);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd\", \r\n    \"is_bought\": \"true\", \r\n    \"price\": \"25\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all rewards with given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "879d2adb-4e9d-439b-8166-6337e29977eb",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct rewards\", function () {\r",
							"    pm.expect(jsonData[0].reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData[1].reward_name).to.eql('2nd');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7db5af63-50c2-482c-8582-ce7d0bed4f0a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is replaced\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v2');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(30);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c53e6fc9-41f7-4294-9543-e617babbffb8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is updated\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v3');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(10);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e298e6f-ee07-42e2-a781-ec95719c45f3",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "389e40d4-4e49-435b-9690-0a30130d3206",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de2c5c42-039e-4c0e-a3a4-fe8b4c2ce67b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0efdc9aa-d1d1-4b0d-9859-b500fd444591",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3793ea2-aa52-4af8-8208-efc3afa6cf9d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51e53ce7-2f76-479d-be0b-e28e6b28b4d6",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Parent\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Fake Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f797a539-04f0-427f-bb65-b88edcceec14",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message recieved\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward does not belong to this parent');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/123/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"123",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a58a300-2d6b-42d5-9a57-36a0b215a021",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee7bfc8d-ef90-49bf-b302-476a0cf086ef",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4130b29-6e4d-4c8c-95e2-91600f4f7ecc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44385849-a44c-4da1-85ff-e08d7b9b9f91",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"1a2b3c\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "669c551a-9307-4f5e-adeb-20575d6550bd",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Bad data was not saved\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Reward');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(123);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1ae5472-ca60-4bbd-8e98-dfca02680088",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Completed By Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60ec44f8-80ba-48f7-b2aa-ccd81759b16d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"delete me\", \r\n    \"money_bounty\": \"404\", \r\n    \"date\": \"2020-09-19\", \r\n    \"parent\": \"{{parent_id}}\",\r\n    \"completed_by\": \"{{child_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f2a172e-6474-4762-bc55-81420061036d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that quest was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3486c76-22e0-4ecc-8122-0d9fb73977f0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Quest was deleted\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that child was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed35f838-3d6e-4923-be1a-ee09cde27c96",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "929285a6-e4e6-4a74-aa04-6dfcedc287a8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"child\", \r\n    \"password\": \"321\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edf9f559-54f4-44aa-84b0-0195ec599335",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "65741748-7214-4b3d-b3ad-8e8ae841038b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffd6fd28-41e5-4239-9dfb-aa4a2b2e0d22",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e70f429-4fe9-4928-ac95-9c7d8e5fdc02",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc3\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f5691a2-454a-414a-a837-256f4e121f4d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f125d40e-8cb5-4265-a0b5-fbfbc0503dbe",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29c05d3e-c1e0-4274-9bf2-94bf3ea6c576",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc3\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e145727f-3095-4fed-bfc9-6ee667a567b1",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb23ce5f-a1ab-425d-82ac-51b4ac6f8cca",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest2\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2048995e-b83d-4d81-976d-3db8cf6d7748",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest3\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbb6e396-d53e-41cb-bb83-8ac96220c5e8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0040657-d6e4-4f7a-b26d-1906e2361b12",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Extra Homework\", \r\n    \"reward_desc\": \"Your reward is more hard work\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b0e777b-87d3-4600-a280-348ba5812ee9",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Friendship\", \r\n    \"reward_desc\": \"The true reward is the friendships we created along the way.\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82b83bcd-ff08-47d4-818f-144dcc247e79",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Rewards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4618eadb-9dfd-47d8-a79b-0abe625e448c",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "789cef74-44d7-49af-88f9-6b881d1b42ca",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d261ade-4153-445b-a9ad-1a3ecf9ff69b",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d9780635-1318-4c2a-9da2-7bede746960a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5876575e-f38e-4315-a493-666814a7c80e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5fd0fc83-c5a8-4ac7-9f87-e0417bdd1bdd",
			"key": "host",
			"value": "http://localhost:3000"
		}
	],
	"protocolProfileBehavior": {}
}