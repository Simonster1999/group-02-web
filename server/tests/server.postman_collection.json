{
	"info": {
		"_postman_id": "d9004172-1eaa-48d8-a4d7-982938e2f4d0",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9607964-a050-4a9e-92bd-8ee3b26b663e",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c80534b2-c371-412d-974d-676166c89624",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de5e093b-c0f6-4e36-ab29-4b81af333623",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents[0].username).to.eql('parent_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return parent with given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15e09655-e6c3-4fe2-9f8a-9be2793e2731",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct parent\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire parent with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2a9c186-258f-405a-8cf4-6a90e626e83a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc2');\r",
							"    pm.expect(jsonData.password).to.eql(\"143\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"143\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update password for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1a2966b-1eed-4bbd-849f-3d1e3d60662e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent password is updated\", function () {\r",
							"    pm.expect(jsonData.password).to.eql(\"333\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\": \"333\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12e1af67-018a-41e1-9a0b-d3e9784e9c40",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffe6f962-1f92-4a61-9516-bba755c18815",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Child is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3388628c-6b40-4930-9cfb-ba8fec498313",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8145b6a-92fe-4f38-9afb-02a3c360de95",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec33464b-bedd-4473-b5be-fdabbddd67df",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct child\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a991c6f6-ba58-4195-9e37-b7fa223112a5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc2');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"balance\": 100}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partially update child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "990ce7b4-a0ce-4b7b-9212-e8cc76d7d2d0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child balance is updated\", function () {\r",
							"    pm.expect(jsonData.balance).to.eql(9999);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"balance\" : 9999}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1682bdf3-db5c-4eaa-acf5-741b490a1354",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non extisting child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "177db0cd-f070-402b-80c2-2fb7331fd1dd",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Child not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78585ba2-7aa7-4c16-9ab1-e17da573c330",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f71a5cd4-ea84-4591-a115-dfad0eca4d14",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Parent not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f95d5e21-eba7-4cb2-a7f2-4206b05ca655",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0f04d12-efd4-4813-b882-d20776f557d5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return quest with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f929f287-8abc-4989-82f2-38110de463da",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"    //check for date\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "24110dbf-68c5-4e5f-8640-4af269fec834",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a7a7beb-9b26-4031-a929-2a9f9520c853",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    pm.expect(jsonData.quests[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return a given quest for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b374ad19-e3ad-4d2e-8cfa-62554f88ecdb",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76ef0f26-6548-4303-af6a-e3c1a8d8cf21",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "acab43a5-00da-4bbe-bf82-3e06b0c48151",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change entire quest entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4bc0748-e854-4bce-9c85-ee2990daf2f6",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest has been replaced\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('The new, refined test quest');\r",
							"    pm.expect(jsonData.quest_desc).to.eql('A much more lucrative quest than its predecessor');\r",
							"    pm.expect(jsonData.is_completed).to.eql(false);\r",
							"    pm.expect(jsonData.money_bounty).to.eql(13.37);\r",
							"    //Research date datatype\r",
							"    //pm.expect(jsonData.date).to.eql(\"2020-09-16\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"The new, refined test quest\", \r\n    \"money_bounty\": \"13.37\",\r\n    \"is_completed\": \"false\", \r\n    \"quest_desc\": \"A much more lucrative quest than its predecessor\", \r\n    \"date\": \"2020-09-16\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77128222-b5f9-48bb-a382-b8978198acee",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id2\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change specified quest attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8601478-cf2f-4975-a46c-0d769bbdc8a2",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Attributes have been updated\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest 2\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n    \"quest_name\": \"test quest 2\",\r\n    \"money_bounty\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests sorted by money_bounty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7db61011-af77-4776-95a0-62ce5f818dc2",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var lastElement = jsonData.quests.length - 1;\r",
							"    pm.expect(jsonData.quests[0].money_bounty).to.lessThan(jsonData.quests[jsonData.quests.length - 1].money_bounty);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests?sort_bounty=asc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					],
					"query": [
						{
							"key": "sort_bounty",
							"value": "asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID for the given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "925eda8a-86b4-4fb4-a7fc-fa7e39395051",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Rewards (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3c68aa6-5530-4a57-a195-e244d2a83044",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    pm.expect(jsonData.rewards).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent For Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f98b58b0-beba-45a3-8b5f-3b364c89ea5a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc1');\r",
							"    pm.expect(jsonData.password).to.eql(\"1234\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"parent_acc1\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8125e37-43db-496a-9b4a-1b10938e8091",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15696fec-7211-499a-908e-3c838e99e845",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct reward\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create 2nd Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "38a25a7f-7466-4337-9ec9-c1445aed7a21",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(25);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd\", \r\n    \"is_bought\": \"true\", \r\n    \"price\": \"25\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all rewards with given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5773fb8-5143-441e-a421-85dce857325a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct rewards\", function () {\r",
							"    pm.expect(jsonData.rewards[0].reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.rewards[1].reward_name).to.eql('2nd');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c362fbc6-7c6a-4f62-9c6f-59f349e0a2fb",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is replaced\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v2');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(30);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a75e15f-3101-4971-9b71-cbaf3c4c599a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is updated\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v3');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(10);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f5dece2-b152-4be5-9338-849d40f665ee",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac09b888-acf8-4989-a026-6785426a5bb9",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92064b4b-38ca-4334-919a-5d9ecee68ef3",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "45f15e67-b3f0-46db-a0a6-8ecf2acb4a76",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "729926f3-a7b4-449b-82f2-1413d754b60e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "537347ec-58b3-4b35-8d54-4edd97442b94",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Parent\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Fake Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8300742b-7136-4bc5-88c6-a141baa5700a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message recieved\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward does not belong to this parent');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/123/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"123",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "761ab407-7aee-4c94-843f-c335061d070a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc0f7a48-5eca-482a-ba5b-767737fb759d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f05d427c-059f-4f0a-9a31-4dc7b157cf50",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9763fa78-7a9f-4277-876a-b328095dc4d6",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"1a2b3c\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "821d7777-39ea-4a45-8978-9e16efe74cf5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Bad data was not saved\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Reward');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(123);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc459eea-4489-4c6f-bb97-bc70cd0d7d96",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Completed By Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b4e72ae-3bd0-435a-b207-e47932983f77",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"delete me\", \r\n    \"money_bounty\": \"404\", \r\n    \"date\": \"2020-09-19\", \r\n    \"parent\": \"{{parent_id}}\",\r\n    \"completed_by\": \"{{child_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3757fbc-6139-44eb-b916-4547f7a9983b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that quest was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6bd5dd0-1e80-4b92-9fef-91d48ffb0434",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Quest was deleted\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that child was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e9fd58c-6e77-4965-9727-52d189a9d65e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59da86a0-9c32-42e1-814f-3271979cc986",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"child\", \r\n    \"password\": \"321\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd4c6a3e-3a30-43f5-8a3f-93add6826e47",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f953ebc6-54c8-4795-84f8-ce40586a376d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15325729-22a0-4077-b3c0-9b84096f2afd",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "828729e6-b05f-4642-be67-6567f756168a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc3\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "925df691-258f-4d2d-8756-2100f51847cf",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c021a7a-baeb-4a23-8266-d96bda5664d3",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "24a328c6-3179-4f18-abb2-8155885f8c55",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc3\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a798baf2-c0eb-4242-9a4d-7b8895ddc68f",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a9daeea-3eee-447f-8afd-269316889779",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest2\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f68c5b3-87ed-41b3-9712-8e1690d92997",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest3\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2015bf81-797e-46f6-b3e0-e79fdde0b5dc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea79bc5d-4935-45e4-98f0-f531aaee2e0b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Extra Homework\", \r\n    \"reward_desc\": \"Your reward is more hard work\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86d91014-2e14-47ab-bee6-ed1146d8ba2a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Friendship\", \r\n    \"reward_desc\": \"The true reward is the friendships we created along the way.\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4d9549b-08e7-42f4-89db-13d67ceb33d7",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Rewards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d141bcb-015a-438a-b477-14efbf1851f8",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2f997e9-c79c-412d-adf6-75765fb8b8ff",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d39781ce-e623-4e94-bcda-384a487fc39b",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "480f3d95-b60f-4529-b999-70f55e6fde49",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "844d8bbd-fbf4-4cc6-b082-f9e5439028e9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5fd0fc83-c5a8-4ac7-9f87-e0417bdd1bdd",
			"key": "host",
			"value": "http://localhost:3000"
		}
	],
	"protocolProfileBehavior": {}
}