{
	"info": {
		"_postman_id": "e595f146-db08-494a-8e1e-d7a6b6ac40d9",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a79f9d62-e271-44d0-bcc6-5e6ecdb74e10",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8507a6a-395d-418d-9511-e1125dd39be0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37ebb7e1-3c64-4a75-8b17-ba0e7f76ce15",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.parents[0].username).to.eql('parent_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return parent with given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d4f4de5-da3c-41fc-96d7-82ef5126b6d4",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct parent\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire parent with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1559dfe3-29df-4091-a73c-2e6703755b6c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc2');\r",
							"    pm.expect(jsonData.password).to.eql(\"143\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"143\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update password for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d7e0e3a-2f73-450e-b494-54718b4da244",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Parent password is updated\", function () {\r",
							"    pm.expect(jsonData.password).to.eql(\"333\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\": \"333\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a521d14-6ceb-41c2-88bf-2fd258a3eb7e",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0aede649-0650-460d-bdd8-014647f02861",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Child is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3c06ccf-147e-4e31-b003-fa5b11ea6a7e",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all children for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "791ff0a3-10f4-4c1e-81a0-f99b5fa2821b",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username for [0] is Simonsterxx\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.children[0].username).to.eql('child_acc');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb8b09c9-501a-4d48-8c39-3a34f753b654",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct child\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc');\r",
							"    pm.expect(jsonData.password).to.eql(\"123\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entire child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0fb30e0f-796e-4b38-81da-aa7783eb9d8a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child info is updated\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child_acc2');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"balance\": 100}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partially update child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf5cdfb4-1333-42bb-b100-74eb8782bbf8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Child balance is updated\", function () {\r",
							"    pm.expect(jsonData.balance).to.eql(9999);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"balance\" : 9999}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8d8e91c-0861-4f96-9d8e-a5fd3604e1dc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non extisting child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "478a253b-3002-4ee5-b918-f4e11eeb73d1",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Child not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bcf6fe2-7e4a-41e6-a78c-f41ba844e6a3",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Child is created with correct data\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('child1');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"child1\",\r\n    \"password\": \"password\",\r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "963eecb6-4335-4b13-b65f-58f83721ca44",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "075102c0-a422-4b66-a48b-4e03b4212bb7",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Parent not found\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f6fc4a5-0dc2-4f90-85d1-31edef725578",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b7eb689-41a5-4981-b557-fed2316619e1",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return quest with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "88f0d6db-c1e9-4c34-b5d5-2c82de8eeded",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(5);\r",
							"    //check for date\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a066baa2-305f-4990-9d20-fc6a617b7663",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.quests[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests for given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7da322a3-9fce-4a9d-b1d2-c60ba30f5827",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    pm.expect(jsonData.quests[0].quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return a given quest for a given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aaacd542-af88-4412-ae13-9b6599a338d4",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quest\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('test quest');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e27e6320-7fb3-40a5-9e02-947ea02b5131",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "914ce430-acf4-4d4f-98c6-67b4b34c3027",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change entire quest entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fa9e019-5418-4ee8-9535-27722bab1e04",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest has been replaced\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('The new, refined test quest');\r",
							"    pm.expect(jsonData.quest_desc).to.eql('A much more lucrative quest than its predecessor');\r",
							"    pm.expect(jsonData.is_completed).to.eql(false);\r",
							"    pm.expect(jsonData.money_bounty).to.eql(13.37);\r",
							"    //Research date datatype\r",
							"    //pm.expect(jsonData.date).to.eql(\"2020-09-16\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"The new, refined test quest\", \r\n    \"money_bounty\": \"13.37\",\r\n    \"is_completed\": \"false\", \r\n    \"quest_desc\": \"A much more lucrative quest than its predecessor\", \r\n    \"date\": \"2020-09-16\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1896a86b-38e6-4d5b-ba2f-dc773f02dac4",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id2\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Quest is created\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql('delete me');\r",
							"    pm.expect(jsonData.money_bounty).to.eql(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"quest_name\": \"delete me\", \"money_bounty\": \"404\", \"date\": \"2020-09-19\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change specified quest attribute",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e87b92e5-45d3-4f34-8205-52d5cf4a4830",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Attributes have been updated\", function () {\r",
							"    pm.expect(jsonData.quest_name).to.eql(\"test quest 2\");\r",
							"    pm.expect(jsonData.money_bounty).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n    \"quest_name\": \"test quest 2\",\r\n    \"money_bounty\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{quest_id2}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{quest_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all quests sorted by money_bounty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81752596-a2cc-402b-adde-b2badd065ee3",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct quests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var lastElement = jsonData.quests.length - 1;\r",
							"    pm.expect(jsonData.quests[0].money_bounty).to.lessThan(jsonData.quests[jsonData.quests.length - 1].money_bounty);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests?sort_bounty=asc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					],
					"query": [
						{
							"key": "sort_bounty",
							"value": "asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the quest with the given ID for the given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "369ff19f-fb3f-4dfc-a344-fe7cf9827237",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests/{{quest_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests",
						"{{quest_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Rewards (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6de3b64c-c496-4752-b513-8cfc908162ff",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List is empty\", function () {\r",
							"    pm.expect(jsonData.rewards).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent For Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "060ee4c9-afb2-49d6-9097-100eaaeee032",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct parent is created\", function () {\r",
							"    pm.expect(jsonData.username).to.eql('parent_acc1');\r",
							"    pm.expect(jsonData.password).to.eql(\"1234\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"parent_acc1\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6dc8f4-85f9-4c86-a2f3-aea768f8afef",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2d15dbd3-d8bd-4407-91b9-22c48497fce2",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct reward\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('1 piece of candy');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(15);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create 2nd Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6153d934-cfd3-4603-a89b-8d2abc899b49",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is created\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(25);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd\", \r\n    \"is_bought\": \"true\", \r\n    \"price\": \"25\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all rewards with given parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7556794a-574f-44ac-84cc-4b5738e602da",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns correct rewards\", function () {\r",
							"    pm.expect(jsonData.rewards[0].reward_name).to.eql('Candy');\r",
							"    pm.expect(jsonData.rewards[1].reward_name).to.eql('2nd');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78585c71-fd6e-4077-8a2e-d45f4e7d2907",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is replaced\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v2');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(true);\r",
							"    pm.expect(jsonData.price).to.eql(30);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23929e8f-4fff-45d8-a3df-1b12c1b8930c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Reward is updated\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('2nd v3');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('Now replaced');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(10);\r",
							"    pm.expect(jsonData.parent).to.eql(environment.parent_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb510ab1-05f3-4d7d-b820-6107bd26e9c1",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08180d55-b82e-4b25-b091-21b92eadba7e",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "934af2ac-2865-4ba5-891a-17c22ca3de0b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0b49d3ea-7260-4b23-bc8c-70c114bb4721",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update non existing reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8cc4ca4-ea3e-4f2c-80fb-8f8a7658af8c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"false\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fded81b3-7dcf-46a2-888c-59d8f4565a7c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Parent\", \r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Fake Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e3c018b-82b6-4532-aa1b-097353b153c9",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response is correct\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message recieved\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Reward does not belong to this parent');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/123/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"123",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward For Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6603fc8-01fb-4a15-9a73-48e4a673dc9b",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Reward\", \r\n    \"price\": \"123\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa09bdf8-b875-4853-8a5f-2f1fbb750d84",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b850b03f-3725-4e50-b2e6-730b950c91d8",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v2\", \r\n    \"reward_desc\": \"Now replaced\",\r\n    \"is_bought\": \"true\", \r\n    \"price\": \"30\", \r\n    \"parent\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update reward with bad data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02bdf725-7986-48ce-be39-03188dd75dac",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns no reward\", function () {\r",
							"    pm.expect(jsonData.message).to.eql('Bad Request');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"2nd v3\", \r\n    \"is_bought\": \"1a2b3c\", \r\n    \"price\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get reward again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2ec6bc2-977e-446b-95dc-484c3fd4e4ee",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Bad data was not saved\", function () {\r",
							"    pm.expect(jsonData.reward_name).to.eql('Reward');\r",
							"    pm.expect(jsonData.reward_desc).to.eql('');\r",
							"    pm.expect(jsonData.is_bought).to.eql(false);\r",
							"    pm.expect(jsonData.price).to.eql(123);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/rewards/{{reward_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"rewards",
						"{{reward_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "788385a7-ff64-4c75-a947-5432b8b71906",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest Completed By Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5844a60-77f9-4ed3-87b2-38852065b2f7",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"delete me\", \r\n    \"money_bounty\": \"404\", \r\n    \"date\": \"2020-09-19\", \r\n    \"parent\": \"{{parent_id}}\",\r\n    \"completed_by\": \"{{child_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ecdd7760-cbb2-4f89-91a0-64f8560446e3",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that quest was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "750f4f40-a210-4760-9ebb-3b3c5c170eda",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Quest was deleted\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/quests/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that child was deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5bc02bc-3393-4d7d-8e0c-f68df740fd31",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children/{{child_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children",
						"{{child_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e541172b-8b3c-4235-85d3-6b1150638bed",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"child\", \r\n    \"password\": \"321\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc3d818c-8454-4f6d-841a-8412e0978abd",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59df1ce8-0025-4bf1-ae77-d5e2a71a32b7",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c67ac2d4-ce1c-4687-88df-42e0ee075698",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc2\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f881cc0d-74c0-4f44-8bec-37f45251a8a0",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"parent_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"parent_acc3\", \"password\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c01f0759-8b40-4ceb-bfd0-65c9141db130",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0726224-b2b4-4117-a2b4-bdf7f6259500",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc2\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Child",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1839d76d-0b08-4315-aa9f-7b4cbdf02915",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"child_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\": \"child_acc3\", \"password\": \"123\", \"parent\": \"{{parent_id}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fe764989-1d6b-4668-b07a-f0cdc662a82c",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8f06ef79-ca33-4d01-823e-027e3a6ac76d",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest2\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Quest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d88118d3-a412-4dcb-9f8b-f4bfdfdf6c5a",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"quest_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quest_name\": \"test quest3\", \r\n    \"money_bounty\": \"5\", \r\n    \"date\": \"2020-09-15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/parents/{{parent_id}}/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents",
						"{{parent_id}}",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e25edb61-f20a-4931-bb26-f2bfcd0b78a6",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Candy\", \r\n    \"reward_desc\": \"1 piece of candy\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46997503-cd4f-4911-99d7-11f285340c62",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Extra Homework\", \r\n    \"reward_desc\": \"Your reward is more hard work\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Reward",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c058ebc0-bebf-425c-9853-cc832d512ba2",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"reward_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Response is CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reward_name\": \"Friendship\", \r\n    \"reward_desc\": \"The true reward is the friendships we created along the way.\", \r\n    \"price\": \"15\", \r\n    \"parent\": \"{{parent_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Quests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0afb4385-7db7-494e-801c-bd5536265fe1",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/quests",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"quests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Rewards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "28ffbe50-f75a-40bd-be90-e9fc1b4e2920",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/rewards",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"rewards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all children",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34c21139-38c7-47bd-bd76-5524ad291d49",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/children",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete All Parents",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41d662e1-a888-4c64-a8db-830bbc0b847f",
						"exec": [
							"pm.test(\"Correct status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/parents",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"parents"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d418c7c4-d0f9-4960-a775-20d23c4b45d6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "92de2bb8-eb13-4020-837b-f97827db6a28",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5fd0fc83-c5a8-4ac7-9f87-e0417bdd1bdd",
			"key": "host",
			"value": "http://localhost:3000"
		}
	],
	"protocolProfileBehavior": {}
}